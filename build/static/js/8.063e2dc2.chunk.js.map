{"version":3,"sources":["assets/images/logo-dark.png","assets/images/logo-light.png","../node_modules/reactstrap/es/Alert.js","../node_modules/reactstrap/es/Label.js","pages/Auth/Register.js"],"names":["propTypes","children","PropTypes","node","className","string","closeClassName","closeAriaLabel","cssModule","object","color","fade","bool","isOpen","toggle","func","tag","tagPropType","transition","shape","Fade","innerRef","oneOfType","defaultProps","_objectSpread2","unmountOnExit","Alert","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","closeClasses","alertTransition","baseClass","timeout","React","createElement","_extends","in","role","type","onClick","stringOrNumberProp","number","columnProps","size","order","offset","hidden","check","for","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","length","withRouter","connect","state","Auth","user","loading","error","registerUser","apiError","useEffect","formik","useFormik","initialValues","username","email","password","validationSchema","Yup","required","onSubmit","values","Fragment","to","src","logodark","alt","height","logolight","variant","handleSubmit","addonType","id","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","invalid","touched","errors","block"],"mappings":"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","file":"static/js/8.063e2dc2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-dark.8469ca76.png\";","export default __webpack_public_path__ + \"static/media/logo-light.8469ca76.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread2 from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread2({}, Fade.defaultProps, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread2({}, Fade.defaultProps, {}, transition, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Container, Row, Col, Card, CardBody, FormGroup, Alert, Form, Input, Button, FormFeedback, Label, InputGroup, InputGroupAddon } from 'reactstrap';\n\n//Import action\nimport { registerUser, apiError } from '../../redux/actions';\n//Import Images\nimport logodark from \"../../assets/images/logo-dark.png\";\nimport logolight from \"../../assets/images/logo-light.png\";\n\n/**\n * Register component\n * @param {*} props \n */\nconst Register = (props) => {\n\n    const clearError = () => {\n        props.apiError(\"\");\n    }\n   \n    useEffect(clearError, []);\n\n    // validation\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            email: '',\n            password: ''\n        },\n        validationSchema: Yup.object({\n            username: Yup.string().required('Required'),\n            email: Yup.string().email('Enter proper email').required('Required'),\n            password: Yup.string()\n                .required('Required')\n        }),\n        onSubmit: values => {\n            props.registerUser(values);\n        },\n    });\n   \n\n    return (\n        <React.Fragment>\n\n        <div className=\"account-pages my-5 pt-sm-5\">\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <Col md={8} lg={6} xl={5}>\n                        <div className=\"text-center mb-4\">\n                            <Link to=\"/\" className=\"auth-logo mb-2 d-block\">\n                                <img src={logodark} alt=\"\" height=\"60\" className=\"logo logo-dark\"/>\n                                <img src={logolight} alt=\"\" height=\"60\" className=\"logo logo-light\" />\n                            </Link>\n\n                            <h4>{('Sign up')}</h4>\n                            <p className=\"text-muted mb-4\">{('Get your Lets-Chat account now')}.</p>\n                            \n                        </div>\n\n                        <Card>\n                            <CardBody className=\"p-4\">\n                                        {\n                                            props.error && <Alert variant=\"danger\">{props.error}</Alert>\n                                        }\n                                        {\n                                            props.user && <Alert variant=\"success\">Thank You for registering with us!</Alert>\n                                        }\n                                <div className=\"p-3\">\n                                        \n                                    <Form onSubmit={formik.handleSubmit}>\n\n                                        <FormGroup>\n                                            <Label>{('Email')}</Label>\n                                            <InputGroup className=\"mb-3 bg-soft-light input-group-lg rounded-lg\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <span className=\"input-group-text border-light text-muted\">\n                                                        <i className=\"ri-user-2-line\"></i>\n                                                    </span>\n                                                </InputGroupAddon>\n                                                <Input\n                                                    type=\"text\"\n                                                    id=\"email\"\n                                                    name=\"email\"\n                                                    className=\"form-control bg-soft-light border-light\"\n                                                    placeholder=\"Enter email\"\n                                                    onChange={formik.handleChange}\n                                                    onBlur={formik.handleBlur}\n                                                    value={formik.values.email}\n                                                    invalid={formik.touched.email && formik.errors.email ? true : false}\n                                                />\n                                                {formik.touched.email && formik.errors.email ? (\n                                                    <FormFeedback type=\"invalid\">{formik.errors.email}</FormFeedback>\n                                                ) : null}\n                                            </InputGroup>\n                                        </FormGroup>\n    \n                                        <FormGroup>\n                                            <Label>{('Your Name')}</Label>\n                                            <InputGroup className=\"mb-3 bg-soft-light input-group-lg rounded-lg\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <span className=\"input-group-text border-light text-muted\">\n                                                        <i className=\"ri-user-2-line\"></i>\n                                                    </span>\n                                                </InputGroupAddon>\n                                                <Input\n                                                    type=\"text\"\n                                                    id=\"username\"\n                                                    name=\"username\"\n                                                    className=\"form-control bg-soft-light border-light\"\n                                                    placeholder=\"Enter your name\"\n                                                    onChange={formik.handleChange}\n                                                    onBlur={formik.handleBlur}\n                                                    value={formik.values.username}\n                                                    invalid={formik.touched.username && formik.errors.username ? true : false}\n                                                />\n                                                {formik.touched.username && formik.errors.username ? (\n                                                    <FormFeedback type=\"invalid\">{formik.errors.username}</FormFeedback>\n                                                ) : null}\n                                            </InputGroup>\n                                        </FormGroup>\n\n                                        <FormGroup className=\"mb-4\">\n                                            <Label>{('Password')}</Label>\n                                            <InputGroup className=\"mb-3 bg-soft-light input-group-lg rounded-lg\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <span className=\"input-group-text border-light text-muted\">\n                                                        <i className=\"ri-lock-2-line\"></i>\n                                                    </span>\n                                                </InputGroupAddon>\n                                                <Input\n                                                    type=\"password\"\n                                                    id=\"password\"\n                                                    name=\"password\"\n                                                    className=\"form-control bg-soft-light border-light\"\n                                                    placeholder=\"Enter Password\"\n                                                    onChange={formik.handleChange}\n                                                    onBlur={formik.handleBlur}\n                                                    value={formik.values.password}\n                                                    invalid={formik.touched.password && formik.errors.password ? true : false}\n                                                />\n                                                {formik.touched.password && formik.errors.password ? (\n                                                    <FormFeedback type=\"invalid\">{formik.errors.password}</FormFeedback>\n                                                ) : null}\n                                                \n                                            </InputGroup>\n                                        </FormGroup>\n\n\n                                        <div>\n                                            <Button color=\"primary\" block className=\" waves-effect waves-light\" type=\"submit\">Sign up</Button>\n                                        </div>\n\n                                        <div className=\"mt-4 text-center\">\n                                            <p className=\"text-muted mb-0\">{('By registering you agree to the Lets-Chat')} <Link to=\"#\" className=\"text-primary\">{('Terms of Use')}</Link></p>\n                                        </div>\n                                        \n                                    </Form>\n                                </div>\n                            </CardBody>\n                        </Card>\n\n                        <div className=\"mt-5 text-center\">\n                            <p>{('Already have an account')} ? <Link to=\"/login\" className=\"font-weight-medium text-primary\"> {('Signin')} </Link> </p>\n                            <p>© {('2020 lets-chat')}. {('Crafted with')} <i className=\"mdi mdi-heart text-danger\"></i> {('by codyPrashant')}</p>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n        </React.Fragment>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    const { user, loading, error } = state.Auth;\n    return { user, loading, error };\n};\n\nexport default withRouter(connect(mapStateToProps, { registerUser, apiError })(Register));"],"sourceRoot":""}