{"version":3,"sources":["routes/routes.js","layouts/NonAuth.js","assets/images/logo.svg","layouts/AuthLayout/LeftSidebarMenu.js","layouts/AuthLayout/index.js","routes/index.js","App.js","serviceWorker.js","helpers/authUtils.js","redux/auth/reducers.js","redux/chat/reducers.js","redux/layout/reducer.js","redux/reducers.js","redux/auth/saga.js","redux/sagas.js","redux/store.js","index.js","redux/auth/constants.js","redux/chat/constants.js","redux/layout/constants.js","redux/auth/actions.js","helpers/firebase.js","redux/chat/actions.js","redux/layout/actions.js"],"names":["StarterPage","React","lazy","Login","authProtectedRoutes","path","component","exact","to","publicRoutes","NonAuth","props","capitalizeFirstLetter","string","charAt","toUpperCase","slice","state","bind","currentage","this","location","pathname","document","title","Fragment","children","Component","withRouter","connect","Layout","setActiveTab","useState","dropdownOpenMobile","setDropdownOpenMobile","toggleTab","tab","activeTab","className","src","logo","alt","height","Nav","pills","role","NavItem","id","NavLink","classnames","active","onClick","UncontrolledTooltip","target","placement","Dropdown","nav","isOpen","toggle","DropdownToggle","DropdownMenu","DropdownItem","href","Index","history","useHistory","useEffect","AppRoute","layout","isAuthProtected","rest","render","localStorage","getItem","from","Routes","fallback","map","route","idx","NonAuthLayout","key","AuthLayout","initFirebaseBackend","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Boolean","window","hostname","match","getLoggedInUser","user","JSON","parse","INIT_STATE","loading","Auth","action","type","LOGIN_USER","LOGIN_USER_SUCCESS","payload","error","REGISTER_USER","REGISTER_USER_SUCCESS","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","passwordResetStatus","API_FAILED","active_user","Chat","CHAT_USER","ACTIVE_USER","FULL_USER","users","ADD_LOGGED_USER","newUser","CREATE_GROUP","newGroup","groups","userSidebar","conversationName","SET_ACTIVE_TAB","OPEN_USER_PROFILE_SIDEBAR","CLOSE_USER_PROFILE_SIDEBAR","SET_CONVERSATION_NAME_IN_OPEN_CHAT","combineReducers","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","fireBaseBackend","getFirebaseBackend","username","password","call","loginUser","response","put","loginUserSuccess","push","apiError","removeItem","email","name","registerUser","registerUserSuccess","forgetPasswordSuccess","takeEvery","all","fork","rootSaga","getState","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","logoutUser","FirebaseAuthBackend","firebaseConfig","f","firebase","auth","firestore","storage","Promise","resolve","reject","createUserWithEmailAndPassword","result","a","collection","add","uid","image","isOnline","blockList","isVerify","description","status","_handleError","signInWithEmailAndPassword","currentUser","sendPasswordResetEmail","url","protocol","host","signOut","setLoggeedInUser","setItem","stringify","getAuthenticatedUser","initializeApp","onAuthStateChanged","_fireBaseBackend","config","activeUser","userId","setFullUser","fullUser","tabId","openUserSidebar","closeUserSidebar","setconversationNameInOpenChat"],"mappings":"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","file":"static/js/main.9af9a905.chunk.js","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// lazy load all the views\n\nconst StarterPage = React.lazy(() => import(\"../pages/Dashboard/index\"));\n\n// auth\nconst Login = React.lazy(() => import(\"../pages/Auth/Login\"));\nconst Logout = React.lazy(() => import(\"../pages/Auth/Logout\"));\nconst ForgetPassword = React.lazy(() => import(\"../pages/Auth/ForgetPassword\"));\nconst Register = React.lazy(() => import(\"../pages/Auth/Register\"));\nconst LockScreen = React.lazy(() => import(\"../pages/Auth/LockScreen\"));\n\n// declare all routes\nconst authProtectedRoutes = [\n  { path: \"/dashboard\", component: StarterPage },\n\n  {\n    path: \"/\",\n    exact: true,\n    component: () => <Redirect to=\"/dashboard\" />,\n  },\n];\n\nconst publicRoutes = [\n  { path: \"/logout\", component: Logout },\n  { path: \"/login\", component: Login },\n  { path: \"/forget-password\", component: ForgetPassword },\n  { path: \"/register\", component: Register },\n  { path: \"/lock-screen\", component: LockScreen}\n];\n\nconst routes = [...authProtectedRoutes, ...publicRoutes];\n\nexport { authProtectedRoutes, publicRoutes, routes };\n","import React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass NonAuth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={};\r\n        this.capitalizeFirstLetter.bind(this);\r\n    }\r\n    \r\n    capitalizeFirstLetter = string => {\r\n        return string.charAt(1).toUpperCase() + string.slice(2);\r\n    };\r\n\r\n    componentDidMount(){\r\n        let currentage = this.capitalizeFirstLetter(this.props.location.pathname);\r\n\r\n        document.title =\r\n          currentage + \" | Lets Chat\";\r\n    }\r\n    render() {\r\n        return <React.Fragment>\r\n            {this.props.children}\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default (withRouter(NonAuth));","export default __webpack_public_path__ + \"static/media/logo.fe4dd1d7.svg\";","import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Nav, NavItem, NavLink, UncontrolledTooltip, Dropdown, DropdownItem, DropdownToggle, DropdownMenu } from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActiveTab } from \"../../redux/actions\";\r\nimport logo from \"../../assets/images/logo.svg\"\r\n\r\nfunction LeftSidebarMenu(props) {\r\n\r\n    // const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [dropdownOpenMobile, setDropdownOpenMobile] = useState(false);\r\n    // const toggle = () => setDropdownOpen(!dropdownOpen);\r\n    const toggleMobile = () => setDropdownOpenMobile(!dropdownOpenMobile);\r\n\r\n    const toggleTab = tab => {\r\n        props.setActiveTab(tab)\r\n    }\r\n\r\n    const activeTab = props.activeTab;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"side-menu flex-lg-column mr-lg-1\">\r\n                {/* LOGO */}\r\n                <div className=\"navbar-brand-box\">\r\n                    <Link to=\"/\" className=\"logo logo-dark\">\r\n                        <span className=\"logo-sm\">\r\n                            <img src={logo} alt=\"logo\" height=\"30\" />\r\n                        </span>\r\n                    </Link>\r\n\r\n                    <Link to=\"/\" className=\"logo logo-light\">\r\n                        <span className=\"logo-sm\">\r\n                            <img src={logo} alt=\"logo\" height=\"30\" />\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n                {/* end navbar-brand-box  */}\r\n\r\n                {/* Start side-menu nav */}\r\n                <div className=\"flex-lg-column my-auto\">\r\n                    <Nav pills className=\"side-menu-nav justify-content-center\" role=\"tablist\">\r\n                        {/* <NavItem id=\"profile\">\r\n                            <NavLink id=\"pills-user-tab\" className={classnames({ active: activeTab === 'profile' })} onClick={() => { toggleTab('profile'); }}>\r\n                            <img src={'https://ui-avatars.com/api/?name=Prashant Gupta'} alt=\"letschat\" className=\"profile-user rounded-circle\" />\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <UncontrolledTooltip target=\"profile\" placement=\"top\">\r\n                            Profile\r\n                        </UncontrolledTooltip> */}\r\n                        <NavItem id=\"Chats\">\r\n                            <NavLink id=\"pills-chat-tab\" className={classnames({ active: activeTab === 'chat' })} onClick={() => { toggleTab('chat'); }}>\r\n                                <i className=\"ri-message-3-line\"></i>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <UncontrolledTooltip target=\"Chats\" placement=\"top\">\r\n                        Chats\r\n                        </UncontrolledTooltip>\r\n                        {/* <NavItem id=\"Groups\">\r\n                            <NavLink id=\"pills-groups-tab\" className={classnames({ active: activeTab === 'group' })} onClick={() => { toggleTab('group'); }}>\r\n                                <i className=\"ri-group-line\"></i>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <UncontrolledTooltip target=\"Groups\" placement=\"top\">\r\n                        Groups\r\n                        </UncontrolledTooltip> */}\r\n                        {/* <NavItem id=\"Contacts\">\r\n                            <NavLink id=\"pills-contacts-tab\" className={classnames({ active: activeTab === 'contacts' })} onClick={() => { toggleTab('contacts'); }}>\r\n                                <i className=\"ri-contacts-line\"></i>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <UncontrolledTooltip target=\"Contacts\" placement=\"top\">\r\n                        Contacts\r\n                        </UncontrolledTooltip> */}\r\n                        <NavItem id=\"Settings\">\r\n                            <NavLink id=\"pills-setting-tab\" className={classnames({ active: activeTab === 'settings' })} onClick={() => { toggleTab('settings'); }}>\r\n                            {/* <i className=\"ri-settings-2-line\"></i> */}\r\n                            <i className=\"ri-user-2-line\"></i>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <UncontrolledTooltip target=\"Settings\" placement=\"top\">\r\n                            Profile\r\n                        </UncontrolledTooltip>\r\n                        <Dropdown nav isOpen={dropdownOpenMobile} toggle={toggleMobile} className=\"profile-user-dropdown d-inline-block d-lg-none\">\r\n                            <DropdownToggle nav>\r\n                                <i className=\"ri-shut-down-line\"></i>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu>\r\n                                <DropdownItem href=\"/logout\"><i className=\"ri-shut-down-line\"></i></DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                    </Nav>\r\n                </div>\r\n                {/* end side-menu nav */}\r\n\r\n                <div className=\"flex-lg-column d-none d-lg-block\">\r\n                    <Nav className=\"side-menu-nav justify-content-center\">\r\n                        <NavItem>\r\n                            <NavLink id=\"logout\" href=\"/logout\"><i className=\"ri-shut-down-line\"></i></NavLink>\r\n                            <UncontrolledTooltip target=\"logout\" placement=\"right\">\r\n                                Logout\r\n                            </UncontrolledTooltip>\r\n                        </NavItem>\r\n\r\n                    </Nav>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n    return {\r\n      ...state.Layout\r\n    };\r\n};\r\n\r\nexport default connect(mapStatetoProps, {\r\n    setActiveTab\r\n})(LeftSidebarMenu);","import React, {useEffect} from 'react'\r\nimport LeftSidebarMenu from \"./LeftSidebarMenu\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function Index(props) {\r\n    const history = useHistory();\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(1).toUpperCase() + string.slice(2);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        let currentage = capitalizeFirstLetter(history.location.pathname);\r\n        document.title = currentage + \" | Lets Chat\";\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <div className=\"layout-wrapper d-lg-flex\">\r\n                    <LeftSidebarMenu />\r\n                    {props.children}\r\n                </div>\r\n            </React.Fragment>\r\n    )\r\n}\r\n","import React, {Suspense} from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\n//import routes\nimport { authProtectedRoutes, publicRoutes } from './routes';\n\n//import layouts\nimport NonAuthLayout from \"../layouts/NonAuth\";\nimport AuthLayout from \"../layouts/AuthLayout/\";\n\n// handle auth and authorization\nconst AppRoute = ({ component: Component, layout: Layout, isAuthProtected, ...rest }) => {\n    return <Route {...rest} render={props => {\n        \n        if (isAuthProtected && !localStorage.getItem(\"authUser\")) {\n            return (\n                <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n            );\n        }\n        // authorised so return component\n        return <Layout><Component {...props} /></Layout>\n    }} />  \n}\n\n/**\n * Main Route component\n */\nconst Routes = (props) => {\n   \n    return (\n        // rendering the router with layout\n        <BrowserRouter>\n            <React.Fragment>\n            <Suspense fallback = {<div></div>} >\n                <Switch>\n                    {/* public routes */}\n                    {publicRoutes.map((route, idx) =>\n                        <AppRoute path={route.path} layout={NonAuthLayout} component={route.component}\n                            key={idx} isAuthProtected={false} />\n                    )}\n\n                    {/* private/auth protected routes */}\n                    {authProtectedRoutes.map((route, idx) =>\n                        <AppRoute path={route.path} layout={AuthLayout} component={route.component}\n                            key={idx} isAuthProtected={true} />\n                    )}\n                </Switch>\n                </Suspense>\n            </React.Fragment>\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;","import React from 'react';\nimport Routes from './routes/';\n\n//Import Scss\nimport \"./assets/scss/themes.scss\";\n\n//Firebase helper\nimport { initFirebaseBackend } from \"./helpers/firebase\";\n\nconst firebaseConfig = {\n\tapiKey: process.env.REACT_APP_APIKEY,\n\tauthDomain: process.env.REACT_APP_AUTHDOMAIN,\n\tdatabaseURL: process.env.REACT_APP_DATABASEURL,\n\tprojectId: process.env.REACT_APP_PROJECTID,\n\tstorageBucket: process.env.REACT_APP_STORAGEBUCKET,\n\tmessagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n\tappId: process.env.REACT_APP_APPID,\n\tmeasurementId: process.env.REACT_APP_MEASUREMENTID,\n};\n  \n// init firebase backend\ninitFirebaseBackend(firebaseConfig);\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import jwtDecode from 'jwt-decode';\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    \n    try {\n        const decoded = jwtDecode(user.token);\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n            console.warn('access token expired');\n            return false;\n        }\n        else {\n            return true;\n        }\n    } catch(e) {\n        console.warn('access token expired');\n        return false;\n    }\n}\n\n/**\n * Sets the logged in user\n */\nconst setLoggedInUser = (user) => {\n    localStorage.setItem('authUser', JSON.stringify(user));\n}\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n    const user = localStorage.getItem('authUser');\n    return user ? (typeof (user) == 'object' ? user : JSON.parse(user)) : null;\n}\n\nexport { isUserAuthenticated, setLoggedInUser, getLoggedInUser };","import {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    API_FAILED\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false\n};\n\n\nconst Auth = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n\n        case LOGOUT_USER:\n            return { ...state, user: null };\n\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n\n        case API_FAILED:\n            return { ...state, loading: false, error: action.payload };\n\n        default: return { ...state };\n    }\n}\n\nexport default Auth;","import { CHAT_USER, ACTIVE_USER,FULL_USER, ADD_LOGGED_USER, CREATE_GROUP} from './constants';\n\nconst INIT_STATE = {\n\tactive_user : 0,\n};\n\nconst Chat = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case CHAT_USER:\n            return { ...state };\n\n        case ACTIVE_USER:\n            return { \n            \t...state,\n                active_user : action.payload };\n                \n        case FULL_USER:\n            return { \n            \t...state,\n                users : action.payload };\n\n        case ADD_LOGGED_USER:\n            const newUser =  action.payload\n            return{\n                ...state, users : [\n                    ...state.users, newUser\n                ]\n            };\n\n        case CREATE_GROUP :\n            const newGroup =  action.payload\n            return {\n                ...state, groups : [\n                    ...state.groups, newGroup\n                ]\n            }\n            \n    default: return { ...state };\n    }\n}\n\nexport default Chat;","// @flow\r\nimport {\r\n\tSET_ACTIVE_TAB,\r\n\tOPEN_USER_PROFILE_SIDEBAR,\r\n\tCLOSE_USER_PROFILE_SIDEBAR,\r\n\tSET_CONVERSATION_NAME_IN_OPEN_CHAT\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n\tactiveTab : \"chat\",\r\n\tuserSidebar : false,\r\n\tconversationName : \"Doris Brown\"\r\n};\r\n\r\nconst Layout = (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_ACTIVE_TAB:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactiveTab: action.payload\r\n\t\t\t};\r\n\r\n\t\tcase OPEN_USER_PROFILE_SIDEBAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserSidebar: true\r\n\t\t\t};\r\n\r\n\t\tcase CLOSE_USER_PROFILE_SIDEBAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserSidebar: false\r\n\t\t\t};\r\n\r\n\t\tcase SET_CONVERSATION_NAME_IN_OPEN_CHAT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tconversationName: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default Layout;\r\n","import { combineReducers } from 'redux';\n\nimport Auth from './auth/reducers';\nimport Chat from './chat/reducers';\nimport Layout from './layout/reducer';\n\nexport default combineReducers({\n    Auth,\n    Chat,\n    Layout\n});","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { getFirebaseBackend } from \"../../helpers/firebase\";\r\n\r\n\r\nimport {\r\n    LOGIN_USER,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    FORGET_PASSWORD\r\n} from './constants';\r\n\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    registerUserSuccess,\r\n    forgetPasswordSuccess,\r\n    apiError\r\n} from './actions';\r\n\r\n\r\n//Initilize firebase\r\nconst fireBaseBackend = getFirebaseBackend();\r\n\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user \r\n */\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password \r\n */\r\nfunction* login({ payload: { username, password, history } }) {\r\n    try {\r\n        const response = yield call(fireBaseBackend.loginUser, username, password);\r\n        yield put(loginUserSuccess(response));\r\n        history.push('/dashboard');\r\n    } catch (error) {\r\n        yield put(apiError(error));\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0 \r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        localStorage.removeItem(\"authUser\");\r\n        if (process.env.REACT_APP_DEFAULTAUTH === 'firebase') {\r\n            yield call(fireBaseBackend.logout);\r\n        }\r\n        yield call(() => {\r\n            history.push(\"/login\");\r\n        });\r\n    } catch (error) { }\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { user } }) {\r\n    try {\r\n        const email = user.email;\r\n        const password = user.password;\r\n        const name = user.username;\r\n        const response = yield call(fireBaseBackend.registerUser, email, password, name);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        yield put(apiError(error));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { email } }) {\r\n    try {\r\n        const response = yield call(fireBaseBackend.forgetPassword, email);\r\n        if (response) {\r\n          yield put(\r\n            forgetPasswordSuccess(\r\n              \"Reset link are sended to your mailbox, check there first\"\r\n            )\r\n          );\r\n        }\r\n    } catch (error) {\r\n        yield put(apiError(error));\r\n    }\r\n}\r\n\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([\r\n        fork(watchLoginUser),\r\n        fork(watchLogoutUser),\r\n        fork(watchRegisterUser),\r\n        fork(watchForgetPassword),\r\n    ]);\r\n}\r\n\r\nexport default authSaga;","import { all } from 'redux-saga/effects';\nimport authSaga from './auth/saga';\n\n\nexport default function* rootSaga(getState) {\n    yield all([\n        authSaga(),\n    ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from './reducers';\nimport sagas from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(\n        reducers,\n        initialState,\n        composeEnhancers(\n            applyMiddleware(...middlewares)\n        ),\n    );\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const LOGIN_USER = \"LOGIN_USER\";\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\n\nexport const LOGOUT_USER = \"LOGOUT_USER\";\n\nexport const REGISTER_USER = \"REGISTER_USER\";\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\n\nexport const FORGET_PASSWORD = \"FORGET_PASSWORD\";\nexport const FORGET_PASSWORD_SUCCESS = \"FORGET_PASSWORD_SUCCESS\";\n\nexport const API_FAILED = \"AUTH_API_FAILED\";","export const CHAT_USER = \"CHAT_USER\";\r\nexport const ACTIVE_USER = \"ACTIVE_USER\";\r\nexport const FULL_USER = \"FULL_USER\";\r\nexport const ADD_LOGGED_USER = \"ADD_LOGGED_USER\";\r\nexport const CREATE_GROUP = \"CREATE_GROUP\";","export const SET_ACTIVE_TAB = \"SET_ACTIVE_TAB\";\r\nexport const OPEN_USER_PROFILE_SIDEBAR = 'OPEN_USER_PROFILE_SIDEBAR';\r\nexport const CLOSE_USER_PROFILE_SIDEBAR = 'CLOSE_USER_PROFILE_SIDEBAR';\r\nexport const SET_CONVERSATION_NAME_IN_OPEN_CHAT = 'SET_CONVERSATION_NAME_IN_OPEN_CHAT';","import {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    API_FAILED\n} from './constants';\n\n\nexport const loginUser = (username, password, history) => ({\n    type: LOGIN_USER,\n    payload: { username, password, history }\n});\n\nexport const loginUserSuccess = (user) => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user\n});\n\nexport const registerUser = (user) => ({\n    type: REGISTER_USER,\n    payload: { user }\n});\n\nexport const registerUserSuccess = (user) => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user\n});\n\nexport const logoutUser = (history) => ({\n    type: LOGOUT_USER,\n    payload: { history }\n});\n\nexport const forgetPassword = (email) => ({\n    type: FORGET_PASSWORD,\n    payload: { email }\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus\n});\n\nexport const apiError = (error) => ({\n    type: API_FAILED,\n    payload: error\n});","import firebase from 'firebase/app';\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n\nclass FirebaseAuthBackend {\n    constructor(firebaseConfig) {\n        if (firebaseConfig) {\n            // Initialize Firebase\n            firebase.initializeApp(firebaseConfig);\n            firebase.auth().onAuthStateChanged((user) => {\n                if (user) {\n                    localStorage.setItem(\"authUser\", JSON.stringify(user));\n                } else {\n                    localStorage.removeItem('authUser');\n                }\n            });\n        }\n    }\n\n      f = () =>firebase;\n      auth = () => firebase.auth();\n      firestore = () => firebase.firestore();\n      storage = () => firebase.storage();\n\n    /**\n     * Registers the user with given details\n     */\n    registerUser = (email, password, name) => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().createUserWithEmailAndPassword(email, password).then(async (result) => {\n                try{\n                let response = await firebase.firestore().collection(\"users\").add({\n                    name: name,\n                    id: result.user.uid,\n                    email : email,\n                    image: 'https://ui-avatars.com/api/?name='+name,\n                    location: \"\",\n                    isOnline: false,\n                    blockList: [],\n                    isVerify: false,\n                    description: \"\",\n                    status: \"\"\n\n                })\n                resolve(response);\n            } catch(e){\n                reject(this._handleError(e));\n            }\n            }, (error) => {\n                reject(this._handleError(error));\n            });\n        });\n    }\n\n\n\n    /**\n     * Login user with given details\n     */\n    loginUser = (email, password) => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().signInWithEmailAndPassword(email, password).then((user) => {\n                resolve(firebase.auth().currentUser);\n            }, (error) => {\n                reject(this._handleError(error));\n            });\n        });\n    }\n\n    /**\n     * forget Password user with given details\n     */\n    forgetPassword = (email) => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().sendPasswordResetEmail(email, { url: window.location.protocol + \"//\" + window.location.host + \"/login\" }).then(() => {\n                resolve(true);\n            }).catch((error) => {\n                reject(this._handleError(error));\n            })\n        });\n    }\n\n    /**\n     * Logout the user\n     */\n    logout = () => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().signOut().then(() => {\n                resolve(true);\n            }).catch((error) => {\n                reject(this._handleError(error));\n            })\n        });\n    }\n\n    setLoggeedInUser = (user) => {\n        localStorage.setItem(\"authUser\", JSON.stringify(user));\n    }\n\n    /**\n     * Returns the authenticated user\n     */\n    getAuthenticatedUser = () => {\n        if (!localStorage.getItem('authUser'))\n            return null;\n        return JSON.parse(localStorage.getItem('authUser'));\n    }\n\n    /**\n     * Handle the error\n     * @param {*} error \n     */\n    _handleError(error) {\n        // var errorCode = error.code;\n        var errorMessage = error.message;\n        return errorMessage;\n    }\n}\n\n\nlet _fireBaseBackend = null;\n\n/**\n * Initilize the backend\n * @param {*} config \n */\nconst initFirebaseBackend = (config) => {\n    if (!_fireBaseBackend) {\n        _fireBaseBackend = new FirebaseAuthBackend(config);\n    }\n    return _fireBaseBackend;\n}\n\n/**\n * Returns the firebase backend\n */\nconst getFirebaseBackend = () => {\n    return _fireBaseBackend;\n}\n\n\n\n\nexport { initFirebaseBackend, getFirebaseBackend };","import {\n    CHAT_USER,ACTIVE_USER,FULL_USER, ADD_LOGGED_USER, CREATE_GROUP\n} from './constants';\n\n\nexport const chatUser = () => ({\n    type: CHAT_USER\n});\n\nexport const activeUser = (userId) => ({\n    type: ACTIVE_USER,\n    payload : userId\n});\n\nexport const setFullUser = (fullUser) => ({\n    type: FULL_USER,\n    payload : fullUser\n});\n\nexport const addLoggedinUser = (userData) => ({\n    type: ADD_LOGGED_USER,\n    payload : userData\n});\n\nexport const createGroup = (groupData) => ({\n    type : CREATE_GROUP,\n    payload : groupData\n})\n","import {\r\n\tSET_ACTIVE_TAB,\r\n\tOPEN_USER_PROFILE_SIDEBAR,\r\n\tCLOSE_USER_PROFILE_SIDEBAR,\r\n\tSET_CONVERSATION_NAME_IN_OPEN_CHAT\r\n} from \"./constants\";\r\n\r\nexport const setActiveTab = (tabId) => ({\r\n\ttype: SET_ACTIVE_TAB,\r\n\tpayload: tabId\r\n});\r\n\r\nexport const openUserSidebar = () => ({\r\n\ttype: OPEN_USER_PROFILE_SIDEBAR\r\n});\r\n\r\nexport const closeUserSidebar = () => ({\r\n\ttype: CLOSE_USER_PROFILE_SIDEBAR\r\n});\r\n\r\nexport const setconversationNameInOpenChat = (conversationName) => ({\r\n\ttype: SET_CONVERSATION_NAME_IN_OPEN_CHAT,\r\n\tpayload: conversationName\r\n});\r\n"],"sourceRoot":""}